import * as fs from 'fs-extra';
import {
  getNormalizedAcceleratorConfig,
} from '../src/configuration/getNormalizedAcceleratorConfig';
import {
  resolve,
} from 'path';

// Make sure any symlinks in the project folder are resolved:
// https://github.com/facebook/create-react-app/issues/637
const appDirectory = fs.realpathSync(process.cwd());
const resolveApp = (relativePath) => resolve(appDirectory, relativePath);

const { publicUrl } = getNormalizedAcceleratorConfig();

export const paths = {
  publicUrl,
  moduleFileExtensions: [
    'css',
    'js',
    'json',
    'jsx',
    'mjs',
    'ts',
    'tsx',
  ],

  appBuild: resolveApp('build-web'),
  appIndex: resolveApp(resolve('src', 'index.tsx')),
  appNodeModules: resolveApp('node_modules'),
  appPackageJson: resolveApp('package.json'),
  appPath: resolveApp('.'),
  appPublic: resolveApp('public'),
  appSrc: resolveApp('src'),
  appTsConfig: resolveApp('tsconfig.json'),
  acceleratorConfig: resolveApp('accelerator.config.js'),
  fontAutogeneratedStyle: resolveApp(resolve('public', 'fonts', 'autogenerated', 'fontface-autogen.css')),
  bundles: resolveApp('bundles'),
  fontFaceObserverTemplate: resolveApp(resolve('templates', 'fontFaceObserver.hbs')),
  fontsAutogenerationDir: resolveApp(resolve('public', 'fonts', 'autogenerated')),
  fontsDir: resolveApp(resolve('public', 'fonts')),
  fontLoaderTemplate: resolveApp(resolve('templates', 'fontLoader.hbs')),
  footers: resolveApp('footers'),
  headers: resolveApp('headers'),
  htmlTemplate: resolveApp(resolve('templates', 'index.hbs')),
  indexHtml: resolveApp(resolve('build-web', 'index.html')),
  inkLib: resolveApp(resolve('lib', 'ink')),
  mutators: resolveApp('mutators'),
  passages: resolveApp('passages'),
  plugins: resolveApp('plugins'),
  proxySetup: resolveApp(resolve('src', 'setupProxy.ts')),
  publicDir: resolveApp('public'),
  renderers: resolveApp('renderers'),
  storyOptions: resolveApp('options'),
  testsSetup: resolveApp(resolve('src', 'setupTests.ts')),
  tslintConfig: resolveApp('tslint.json'),
};
